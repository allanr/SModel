/*
 * generated by Fujaba - CodeGen2
 */
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.upb.tools.sdm.*; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import java.util.*;
import de.upb.tools.fca.*; // requires Fujaba5/libs/RuntimeTools.jar in classpath


public class Player
{



   public static final String PROPERTY__NAME = "_name";

   @Property( name = PROPERTY__NAME, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private String _name;

   @Property( name = PROPERTY__NAME )
   private void set_name (String value)
   {
      this._name = value;
   }

   private Player with_name (String value)
   {
      set_name (value);
      return this;
   }

   @Property( name = PROPERTY__NAME )
   private String get_name ()
   {
      return this._name;
   }

   public static final String PROPERTY__TURN = "_turn";

   @Property( name = PROPERTY__TURN, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private boolean _turn;

   @Property( name = PROPERTY__TURN )
   private void set_turn (boolean value)
   {
      this._turn = value;
   }

   private Player with_turn (boolean value)
   {
      set_turn (value);
      return this;
   }

   @Property( name = PROPERTY__TURN )
   private boolean is_turn ()
   {
      return this._turn;
   }

   public boolean checkGameEnd ()
   {
      boolean fujaba__Success = false;
      int seeds = 0;
      Object _TmpObject = null;
      Iterator fujaba__IterThisToPit = null;
      Pit pit = null;

      // // init seed counter
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         seeds = 0;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // // go through players every pit and count seeds from pit
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // iterate to-many link has pits from this to pit
         fujaba__Success = false;
         fujaba__IterThisToPit = this.iteratorOfPit ();

         while ( fujaba__IterThisToPit.hasNext () )
         {
            try
            {
               pit = (Pit) fujaba__IterThisToPit.next ();

               // check object pit is really bound
               JavaSDM.ensure ( pit != null );
               // story pattern storypatternwiththis
               try 
               {
                  fujaba__Success = false; 

                  // check object pit is really bound
                  JavaSDM.ensure ( pit != null );
                  // collabStat call
                  seeds = seeds + pit.countSeeds();
                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // // if there are no more seeds in player pits, then game is over
      if ( !( seeds == 0 ) )
      {
         return false;

      }
      return true;
   }

   public int countSeeds ()
   {
      boolean fujaba__Success = false;
      int seeds = 0;
      Object _TmpObject = null;
      Iterator fujaba__IterThisToPit = null;
      Pit pit = null;
      Iterator fujaba__IterThisToStore = null;
      Store store = null;

      // // init seed counter
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         seeds = 0;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // //go through player every pit
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // iterate to-many link has pits from this to pit
         fujaba__Success = false;
         fujaba__IterThisToPit = this.iteratorOfPit ();

         while ( fujaba__IterThisToPit.hasNext () )
         {
            try
            {
               pit = (Pit) fujaba__IterThisToPit.next ();

               // check object pit is really bound
               JavaSDM.ensure ( pit != null );
               // // add pit seeds to counter
               // story pattern successor
               try 
               {
                  fujaba__Success = false; 

                  // check object pit is really bound
                  JavaSDM.ensure ( pit != null );
                  // collabStat call
                  seeds = seeds + pit.countSeeds();
                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // // check if player has store
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // iterate to-many link has store from this to store
         fujaba__Success = false;
         fujaba__IterThisToStore = this.iteratorOfStore ();

         while ( !(fujaba__Success) && fujaba__IterThisToStore.hasNext () )
         {
            try
            {
               store = (Store) fujaba__IterThisToStore.next ();

               // check object store is really bound
               JavaSDM.ensure ( store != null );

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         // // count store seeds
         // story pattern storypatternwiththis
         try 
         {
            fujaba__Success = false; 

            // check object store is really bound
            JavaSDM.ensure ( store != null );
            // collabStat call
            seeds = seeds + store.countSeeds();
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      return seeds;
   }

   public String getName ()
   {
      boolean fujaba__Success = false;

      // // get player name
      return this._name;
   }

   public Pit getOtherPlayerPit (int number )
   {
      boolean fujaba__Success = false;
      Player nextPlayer = null;
      int seeds = 0;
      Object _TmpObject = null;
      Iterator fujaba__IterNextPlayerToPit = null;
      Pit pit = null;

      // // init seed counter and select other player
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // search to-one link next player from this to nextPlayer
         nextPlayer = this.getPlayer ();

         // check object nextPlayer is really bound
         JavaSDM.ensure ( nextPlayer != null );

         // check isomorphic binding between objects this and nextPlayer
         JavaSDM.ensure ( !this.equals (nextPlayer) );


         // collabStat call
         seeds = 0;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // // go to the right pit, if the right pit does not exists then return null
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object nextPlayer is really bound
         JavaSDM.ensure ( nextPlayer != null );
         // iterate to-many link has pits from nextPlayer to pit
         fujaba__Success = false;
         fujaba__IterNextPlayerToPit = nextPlayer.iteratorOfPit ();

         while ( fujaba__IterNextPlayerToPit.hasNext () )
         {
            try
            {
               pit = (Pit) fujaba__IterNextPlayerToPit.next ();

               // check object pit is really bound
               JavaSDM.ensure ( pit != null );
               // collabStat call
               number = number - 1;
               if ( number < 0 )
               {
                  // // return correct pit from other player
                  // story pattern storypatternwiththis
                  try 
                  {
                     fujaba__Success = false; 

                     // check object pit is really bound
                     JavaSDM.ensure ( pit != null );
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  return pit;

               }

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return null;
   }

   public int getSeedsFromPit (int number )
   {
      boolean fujaba__Success = false;
      int seeds = 0;
      Object _TmpObject = null;
      Iterator fujaba__IterThisToPit = null;
      Pit pit = null;

      // // init seed counter
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         seeds = 0;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // // go to right pit and get to the right pit
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // iterate to-many link has pits from this to pit
         fujaba__Success = false;
         fujaba__IterThisToPit = this.iteratorOfPit ();

         while ( fujaba__IterThisToPit.hasNext () )
         {
            try
            {
               pit = (Pit) fujaba__IterThisToPit.next ();

               // check object pit is really bound
               JavaSDM.ensure ( pit != null );
               // collabStat call
               number = number - 1;
               if ( number < 0 )
               {
                  // // take seeds count from this pit
                  // story pattern storypatternwiththis
                  try 
                  {
                     fujaba__Success = false; 

                     // check object pit is really bound
                     JavaSDM.ensure ( pit != null );
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  return pit.countSeeds();

               }

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return 0;
   }

   public int getSeedsFromStore ()
   {
      boolean fujaba__Success = false;
      Iterator fujaba__IterThisToStore = null;
      Store store = null;

      // // get seeds count from player store
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // iterate to-many link has store from this to store
         fujaba__Success = false;
         fujaba__IterThisToStore = this.iteratorOfStore ();

         while ( !(fujaba__Success) && fujaba__IterThisToStore.hasNext () )
         {
            try
            {
               store = (Store) fujaba__IterThisToStore.next ();

               // check object store is really bound
               JavaSDM.ensure ( store != null );

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return store.countSeeds();
   }

   public boolean getTurn ()
   {
      boolean fujaba__Success = false;

      // // get turn attribute from player
      return this._turn;
   }

   /**
    * <pre>
    *           n     player     0..1
    * Player ------------------------- Mancala
    *           player               mancala
    * </pre>
    */
   public static final String PROPERTY_MANCALA = "mancala";

   @Property( name = PROPERTY_MANCALA, partner = Mancala.PROPERTY_PLAYER, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private Mancala mancala;

   @Property( name = PROPERTY_MANCALA )
   public boolean setMancala (Mancala value)
   {
      boolean changed = false;

      if (this.mancala != value)
      {
      
         Mancala oldValue = this.mancala;
         Player source = this;
         if (this.mancala != null)
         {
            this.mancala = null;
            oldValue.removeFromPlayer (this);
         }
         this.mancala = value;

         if (value != null)
         {
            value.addToPlayer (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_MANCALA )
   public Player withMancala (Mancala value)
   {
      setMancala (value);
      return this;
   }

   public Mancala getMancala ()
   {
      return this.mancala;
   }

   /**
    * <pre>
    *           0..1     has pits     0..n
    * Player ------------------------> Pit
    *           player               pit
    * </pre>
    */
   public static final String PROPERTY_PIT = "pit";

   @Property( name = PROPERTY_PIT, kind = ReferenceHandler.ReferenceKind.TO_MANY,
         adornment = ReferenceHandler.Adornment.NONE)
   private FHashSet<Pit> pit;

   @Property( name = PROPERTY_PIT )
   public Set<? extends Pit> getPit()
   {
      return ((this.pit == null)
              ? Collections.EMPTY_SET
              : Collections.unmodifiableSet(this.pit));
   }

   @Property( name = PROPERTY_PIT )
   public boolean addToPit (Pit value)
   {
      boolean changed = false;

      if (value != null)
      {
         if (this.pit == null)
         {
            this.pit = new FHashSet<Pit> ();

         }
      
         changed = this.pit.add (value);
      
      }
      return changed;
   }

   @Property( name = PROPERTY_PIT )
   public Player withPit (Pit value)
   {
      addToPit (value);
      return this;
   }

   public Player withoutPit (Pit value)
   {
      removeFromPit (value);
      return this;
   }


   public boolean removeFromPit (Pit value)
   {
      boolean changed = false;

      if ((this.pit != null) && (value != null))
      {
      
         changed = this.pit.remove (value);
      
      }
      return changed;
   }

   @Property( name = PROPERTY_PIT )
   public void removeAllFromPit (){
      if (this.pit != null && this.pit.size () > 0)
      {
      
         this.pit.clear();
      
      }
   }

   @Property( name = PROPERTY_PIT )
   public boolean hasInPit (Pit value)
   {
      return ((this.pit != null) &&
              (value != null) &&
              this.pit.contains (value));
   }

   @Property( name = PROPERTY_PIT )
   public Iterator<? extends Pit> iteratorOfPit ()
   {
      return ((this.pit == null)
              ? FEmptyIterator.<Pit>get ()
              : this.pit.iterator ());
   }

   @Property( name = PROPERTY_PIT )
   public int sizeOfPit ()
   {
      return ((this.pit == null)
              ? 0
              : this.pit.size ());
   }

   public boolean playPit (int number )
   {
      boolean fujaba__Success = false;
      int whichPit = 0;
      int checkPit = 0;
      int fullTurn = 0;
      Object _TmpObject = null;
      Player next = null;
      int seeds = 0;
      int checkSeeds = 0;
      Iterator fujaba__IterPitToSeed = null;
      Seed seed = null;
      Iterator fujaba__IterNextPitToSeed = null;
      Iterator fujaba__IterThisToStore = null;
      Store store = null;
      Pit otherplayerpit = null;
      Iterator fujaba__IterOtherplayerpitToSeed = null;
      Iterator fujaba__IterThisToNextPit = null;
      Pit nextPit = null;
      Player nextPlayer = null;
      Iterator fujaba__IterNextPlayerToPit = null;
      Pit pit = null;
      Iterator fujaba__IterNextPlayerToStore = null;
      Iterator fujaba__IterThisToPit = null;

      // // init variables and check if it is players turn or if player selected correct pit, if not result false
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         whichPit = number;
         // collabStat call
         checkPit = number;
         // collabStat call
         fullTurn = 0;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( this._turn == false )
      {
         return false;

      }
      if ( number < 0 || number > 5 )
      {
         return false;

      }
      // // go to correct pit
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // iterate to-many link has pits from this to pit
         fujaba__Success = false;
         fujaba__IterThisToPit = this.iteratorOfPit ();

         while ( fujaba__IterThisToPit.hasNext () )
         {
            try
            {
               pit = (Pit) fujaba__IterThisToPit.next ();

               // check object pit is really bound
               JavaSDM.ensure ( pit != null );
               // collabStat call
               number = number - 1;
               if ( number < 0 )
               {
                  // // init another variables to get other player pit, if this player last seed lands to pit, where are 0 pits and take the correct pit
                  // story pattern storypatternwiththis
                  try 
                  {
                     fujaba__Success = false; 

                     // check object pit is really bound
                     JavaSDM.ensure ( pit != null );
                     // search to-one link next player from this to next
                     next = this.getPlayer ();

                     // check object next is really bound
                     JavaSDM.ensure ( next != null );

                     // check isomorphic binding between objects this and next
                     JavaSDM.ensure ( !this.equals (next) );


                     // collabStat call
                     seeds = pit.countSeeds() + 1;
                     // collabStat call
                     _turn = false;
                     // collabStat call
                     next._turn = true;
                     // collabStat call
                     checkSeeds = pit.countSeeds();
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  if ( seeds == 1 )
                  {
                     // // this pit has no seeds (+1 is a hack) result false and let player play again
                     // story pattern storypatternwiththis
                     try 
                     {
                        fujaba__Success = false; 

                        // search to-one link next player from this to next
                        next = this.getPlayer ();

                        // check object next is really bound
                        JavaSDM.ensure ( next != null );

                        // check isomorphic binding between objects this and next
                        JavaSDM.ensure ( !this.equals (next) );


                        // assign attribute this
                        this.set_turn (true);
                        // assign attribute next
                        next.set_turn (false);
                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }

                     return false;

                  }
                  // // remove seeds from pit
                  // story pattern storypatternwiththis
                  try 
                  {
                     fujaba__Success = false; 

                     // check object pit is really bound
                     JavaSDM.ensure ( pit != null );
                     // iterate to-many link has seeds from pit to seed
                     fujaba__Success = false;
                     fujaba__IterPitToSeed = pit.iteratorOfSeed ();

                     while ( fujaba__IterPitToSeed.hasNext () )
                     {
                        try
                        {
                           seed = (Seed) fujaba__IterPitToSeed.next ();

                           // check object seed is really bound
                           JavaSDM.ensure ( seed != null );
                           // destroy link has seeds from pit to seed
                           pit.removeFromSeed (seed);

                           fujaba__Success = true;
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }
                     }
                     JavaSDM.ensure (fujaba__Success);
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  while( true )
                  {
                     // // put every seed into next pit
                     // story pattern storypatternwiththis
                     try 
                     {
                        fujaba__Success = false; 

                        // iterate to-many link has pits from this to nextPit
                        fujaba__Success = false;
                        fujaba__IterThisToNextPit = this.iteratorOfPit ();

                        while ( fujaba__IterThisToNextPit.hasNext () )
                        {
                           try
                           {
                              nextPit = (Pit) fujaba__IterThisToNextPit.next ();

                              // check object nextPit is really bound
                              JavaSDM.ensure ( nextPit != null );
                              // collabStat call
                              whichPit = whichPit - 1;
                              if ( seeds > 0 && whichPit < 0 )
                              {
                                 // // generate new relation with pit and seed
                                 // story pattern storypatternwiththis
                                 try 
                                 {
                                    fujaba__Success = false; 

                                    // check object nextPit is really bound
                                    JavaSDM.ensure ( nextPit != null );
                                    // create object seed
                                    seed = new Seed ( );

                                    // create link has seeds from nextPit to seed
                                    nextPit.addToSeed (seed);

                                    // collabStat call
                                    seeds = seeds - 1;
                                    fujaba__Success = true;
                                 }
                                 catch ( JavaSDMException fujaba__InternalException )
                                 {
                                    fujaba__Success = false;
                                 }

                                 if ( seeds == 0 && nextPit.countSeeds() == 1 && this.getOtherPlayerPit(5-(checkPit+checkSeeds)%14).countSeeds() > 0 )
                                 {
                                    // // if the last seed landed into pit with 0 seeds, take other players seeds from opposite possition
                                    // story pattern storypatternwiththis
                                    try 
                                    {
                                       fujaba__Success = false; 

                                       // check object nextPit is really bound
                                       JavaSDM.ensure ( nextPit != null );
                                       // iterate to-many link has seeds from nextPit to seed
                                       fujaba__Success = false;
                                       fujaba__IterNextPitToSeed = nextPit.iteratorOfSeed ();

                                       while ( !(fujaba__Success) && fujaba__IterNextPitToSeed.hasNext () )
                                       {
                                          try
                                          {
                                             seed = (Seed) fujaba__IterNextPitToSeed.next ();

                                             // check object seed is really bound
                                             JavaSDM.ensure ( seed != null );

                                             fujaba__Success = true;
                                          }
                                          catch ( JavaSDMException fujaba__InternalException )
                                          {
                                             fujaba__Success = false;
                                          }
                                       }
                                       JavaSDM.ensure (fujaba__Success);
                                       // iterate to-many link has store from this to store
                                       fujaba__Success = false;
                                       fujaba__IterThisToStore = this.iteratorOfStore ();

                                       while ( !(fujaba__Success) && fujaba__IterThisToStore.hasNext () )
                                       {
                                          try
                                          {
                                             store = (Store) fujaba__IterThisToStore.next ();

                                             // check object store is really bound
                                             JavaSDM.ensure ( store != null );

                                             fujaba__Success = true;
                                          }
                                          catch ( JavaSDMException fujaba__InternalException )
                                          {
                                             fujaba__Success = false;
                                          }
                                       }
                                       JavaSDM.ensure (fujaba__Success);
                                       // destroy link has seeds from nextPit to seed
                                       nextPit.removeFromSeed (seed);
                                       // create link has seeds from store to seed
                                       store.addToSeed (seed);

                                       fujaba__Success = true;
                                    }
                                    catch ( JavaSDMException fujaba__InternalException )
                                    {
                                       fujaba__Success = false;
                                    }

                                    // // select other player pit
                                    // story pattern storypatternwiththis
                                    try 
                                    {
                                       fujaba__Success = false; 

                                       // create object otherplayerpit
                                       otherplayerpit = this.getOtherPlayerPit(5-(checkPit+checkSeeds)%14);

                                       fujaba__Success = true;
                                    }
                                    catch ( JavaSDMException fujaba__InternalException )
                                    {
                                       fujaba__Success = false;
                                    }

                                    // // delete seeds from other player pit and put it to the correct player store
                                    // story pattern storypatternwiththis
                                    try 
                                    {
                                       fujaba__Success = false; 

                                       // check object otherplayerpit is really bound
                                       JavaSDM.ensure ( otherplayerpit != null );
                                       // iterate to-many link has seeds from otherplayerpit to seed
                                       fujaba__Success = false;
                                       fujaba__IterOtherplayerpitToSeed = otherplayerpit.iteratorOfSeed ();

                                       while ( fujaba__IterOtherplayerpitToSeed.hasNext () )
                                       {
                                          try
                                          {
                                             seed = (Seed) fujaba__IterOtherplayerpitToSeed.next ();

                                             // check object seed is really bound
                                             JavaSDM.ensure ( seed != null );
                                             // iterate to-many link has store from this to store
                                             fujaba__Success = false;
                                             fujaba__IterThisToStore = this.iteratorOfStore ();

                                             while ( fujaba__IterThisToStore.hasNext () )
                                             {
                                                try
                                                {
                                                   store = (Store) fujaba__IterThisToStore.next ();

                                                   // check object store is really bound
                                                   JavaSDM.ensure ( store != null );
                                                   // destroy link has seeds from otherplayerpit to seed
                                                   otherplayerpit.removeFromSeed (seed);
                                                   // create link has seeds from store to seed
                                                   store.addToSeed (seed);


                                                   fujaba__Success = true;
                                                }
                                                catch ( JavaSDMException fujaba__InternalException )
                                                {
                                                   fujaba__Success = false;
                                                }
                                             }
                                             JavaSDM.ensure (fujaba__Success);

                                             fujaba__Success = true;
                                          }
                                          catch ( JavaSDMException fujaba__InternalException )
                                          {
                                             fujaba__Success = false;
                                          }
                                       }
                                       JavaSDM.ensure (fujaba__Success);
                                       fujaba__Success = true;
                                    }
                                    catch ( JavaSDMException fujaba__InternalException )
                                    {
                                       fujaba__Success = false;
                                    }


                                 }

                              }

                              fujaba__Success = true;
                           }
                           catch ( JavaSDMException fujaba__InternalException )
                           {
                              fujaba__Success = false;
                           }
                        }
                        JavaSDM.ensure (fujaba__Success);
                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }

                     if ( fullTurn == 0 )
                     {
                        // // delete the seed from taken pit (+1 hack)
                        // story pattern storypatternwiththis
                        try 
                        {
                           fujaba__Success = false; 

                           // check object pit is really bound
                           JavaSDM.ensure ( pit != null );
                           // iterate to-many link has seeds from pit to seed
                           fujaba__Success = false;
                           fujaba__IterPitToSeed = pit.iteratorOfSeed ();

                           while ( !(fujaba__Success) && fujaba__IterPitToSeed.hasNext () )
                           {
                              try
                              {
                                 seed = (Seed) fujaba__IterPitToSeed.next ();

                                 // check object seed is really bound
                                 JavaSDM.ensure ( seed != null );

                                 fujaba__Success = true;
                              }
                              catch ( JavaSDMException fujaba__InternalException )
                              {
                                 fujaba__Success = false;
                              }
                           }
                           JavaSDM.ensure (fujaba__Success);
                           // destroy link has seeds from pit to seed
                           pit.removeFromSeed (seed);
                           fujaba__Success = true;
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }


                     }


                  	// loop termination check 
                  	if ( !( seeds > 0 ) )
                  	{
                  		break;
                  	}
	
                     // // go through store and put seed into store
                     // story pattern storypatternwiththis
                     try 
                     {
                        fujaba__Success = false; 

                        // iterate to-many link has store from this to store
                        fujaba__Success = false;
                        fujaba__IterThisToStore = this.iteratorOfStore ();

                        while ( !(fujaba__Success) && fujaba__IterThisToStore.hasNext () )
                        {
                           try
                           {
                              store = (Store) fujaba__IterThisToStore.next ();

                              // check object store is really bound
                              JavaSDM.ensure ( store != null );

                              fujaba__Success = true;
                           }
                           catch ( JavaSDMException fujaba__InternalException )
                           {
                              fujaba__Success = false;
                           }
                        }
                        JavaSDM.ensure (fujaba__Success);
                        // create object seed
                        seed = new Seed ( );

                        // create link has seeds from store to seed
                        store.addToSeed (seed);

                        // collabStat call
                        seeds = seeds - 1;
                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }

                     if ( !( seeds > 0 ) )
                     {
                        // // if the last seed landed into store, then this player can play again
                        // story pattern storypatternwiththis
                        try 
                        {
                           fujaba__Success = false; 

                           // search to-one link next player from this to next
                           next = this.getPlayer ();

                           // check object next is really bound
                           JavaSDM.ensure ( next != null );

                           // check isomorphic binding between objects this and next
                           JavaSDM.ensure ( !this.equals (next) );


                           // assign attribute next
                           next.set_turn (false);
                           // collabStat call
                           _turn = true;
                           fujaba__Success = true;
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }

                        return true;

                     }
                     // // select next player for getting next player pits
                     // story pattern storypatternwiththis
                     try 
                     {
                        fujaba__Success = false; 

                        // search to-one link next player from this to nextPlayer
                        nextPlayer = this.getPlayer ();

                        // check object nextPlayer is really bound
                        JavaSDM.ensure ( nextPlayer != null );

                        // check isomorphic binding between objects this and nextPlayer
                        JavaSDM.ensure ( !this.equals (nextPlayer) );


                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }

                     // // go through next player pits
                     // story pattern storypatternwiththis
                     try 
                     {
                        fujaba__Success = false; 

                        // check object nextPlayer is really bound
                        JavaSDM.ensure ( nextPlayer != null );
                        // iterate to-many link has pits from nextPlayer to pit
                        fujaba__Success = false;
                        fujaba__IterNextPlayerToPit = nextPlayer.iteratorOfPit ();

                        while ( fujaba__IterNextPlayerToPit.hasNext () )
                        {
                           try
                           {
                              pit = (Pit) fujaba__IterNextPlayerToPit.next ();

                              // check object pit is really bound
                              JavaSDM.ensure ( pit != null );
                              if ( seeds > 0 )
                              {
                                 // // if there are seeds put them into next player's pit
                                 // story pattern storypatternwiththis
                                 try 
                                 {
                                    fujaba__Success = false; 

                                    // check object pit is really bound
                                    JavaSDM.ensure ( pit != null );
                                    // create object seed
                                    seed = new Seed ( );

                                    // create link has seeds from pit to seed
                                    pit.addToSeed (seed);

                                    // collabStat call
                                    seeds = seeds - 1;
                                    fujaba__Success = true;
                                 }
                                 catch ( JavaSDMException fujaba__InternalException )
                                 {
                                    fujaba__Success = false;
                                 }


                              }

                              fujaba__Success = true;
                           }
                           catch ( JavaSDMException fujaba__InternalException )
                           {
                              fujaba__Success = false;
                           }
                        }
                        JavaSDM.ensure (fujaba__Success);
                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }

                     if ( !( seeds > 0 ) )
                     {
                        return true;

                     }
                     // // if pits are over from next player then go to the next player store and put seed there
                     // story pattern storypatternwiththis
                     try 
                     {
                        fujaba__Success = false; 

                        // check object nextPlayer is really bound
                        JavaSDM.ensure ( nextPlayer != null );
                        // iterate to-many link has store from nextPlayer to store
                        fujaba__Success = false;
                        fujaba__IterNextPlayerToStore = nextPlayer.iteratorOfStore ();

                        while ( !(fujaba__Success) && fujaba__IterNextPlayerToStore.hasNext () )
                        {
                           try
                           {
                              store = (Store) fujaba__IterNextPlayerToStore.next ();

                              // check object store is really bound
                              JavaSDM.ensure ( store != null );

                              fujaba__Success = true;
                           }
                           catch ( JavaSDMException fujaba__InternalException )
                           {
                              fujaba__Success = false;
                           }
                        }
                        JavaSDM.ensure (fujaba__Success);
                        // create object seed
                        seed = new Seed ( );

                        // create link has seeds from store to seed
                        store.addToSeed (seed);

                        // collabStat call
                        seeds = seeds - 1;
                        // collabStat call
                        fullTurn = 1;
                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }

                     if ( !( seeds > 0 ) )
                     {
                        return true;

                     }

                  }
                  return true;

               }

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return false;
   }

   /**
    * <pre>
    *           0..1     next player     0..1
    * Player ------------------------- Player
    *           player               player
    * </pre>
    */
   public static final String PROPERTY_PLAYER = "player";

   @Property( name = PROPERTY_PLAYER, partner = Player.PROPERTY_PLAYER, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private Player player;

   @Property( name = PROPERTY_PLAYER )
   public boolean setPlayer (Player value)
   {
      boolean changed = false;

      if (this.player != value)
      {
      
         Player oldValue = this.player;
         Player source = this;
         if (this.player != null)
         {
            this.player = null;
            oldValue.setPlayer (null);
         }
         this.player = value;

         if (value != null)
         {
            value.setPlayer (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_PLAYER )
   public Player withPlayer (Player value)
   {
      setPlayer (value);
      return this;
   }

   public Player getPlayer ()
   {
      return this.player;
   }

   public void setName (String name )
   {
      boolean fujaba__Success = false;

      // // change player name by parameter
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // assign attribute this
         this.set_name (name);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   public void setTurn (boolean turn )
   {
      boolean fujaba__Success = false;

      // // change player turn with parameter
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // assign attribute this
         this.set_turn (turn);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   /**
    * <pre>
    *           0..1     has store     0..n
    * Player ------------------------- Store
    *           player               store
    * </pre>
    */
   public static final String PROPERTY_STORE = "store";

   @Property( name = PROPERTY_STORE, partner = Store.PROPERTY_PLAYER, kind = ReferenceHandler.ReferenceKind.TO_MANY,
         adornment = ReferenceHandler.Adornment.NONE)
   private FHashSet<Store> store;

   @Property( name = PROPERTY_STORE )
   public Set<? extends Store> getStore()
   {
      return ((this.store == null)
              ? Collections.EMPTY_SET
              : Collections.unmodifiableSet(this.store));
   }

   @Property( name = PROPERTY_STORE )
   public boolean addToStore (Store value)
   {
      boolean changed = false;

      if (value != null)
      {
         if (this.store == null)
         {
            this.store = new FHashSet<Store> ();

         }
      
         changed = this.store.add (value);
         if (changed)
         {
            value.setPlayer (this);
         }
      
      }
      return changed;
   }

   @Property( name = PROPERTY_STORE )
   public Player withStore (Store value)
   {
      addToStore (value);
      return this;
   }

   public Player withoutStore (Store value)
   {
      removeFromStore (value);
      return this;
   }


   public boolean removeFromStore (Store value)
   {
      boolean changed = false;

      if ((this.store != null) && (value != null))
      {
      
         changed = this.store.remove (value);
         if (changed)
         {
            value.setPlayer (null);
         }
      
      }
      return changed;
   }

   @Property( name = PROPERTY_STORE )
   public void removeAllFromStore (){
   
      Store tmpValue;
      Iterator<? extends Store> iter = this.iteratorOfStore ();
      while (iter.hasNext ())
      {
         tmpValue = (Store) iter.next ();
         this.removeFromStore (tmpValue);
      }
   
   }

   @Property( name = PROPERTY_STORE )
   public boolean hasInStore (Store value)
   {
      return ((this.store != null) &&
              (value != null) &&
              this.store.contains (value));
   }

   @Property( name = PROPERTY_STORE )
   public Iterator<? extends Store> iteratorOfStore ()
   {
      return ((this.store == null)
              ? FEmptyIterator.<Store>get ()
              : this.store.iterator ());
   }

   @Property( name = PROPERTY_STORE )
   public int sizeOfStore ()
   {
      return ((this.store == null)
              ? 0
              : this.store.size ());
   }

   public void removeYou()
   {
      this.setMancala (null);
      this.removeAllFromPit ();
      this.setPlayer (null);
      this.removeAllFromStore ();
   }
}


